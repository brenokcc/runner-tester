# Generated by Django 4.2.6 on 2024-05-21 12:22

from django.db import migrations, models
import django.db.models.deletion
import slth
import slth.db.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('slth', '0006_user'),
    ]

    operations = [
        migrations.CreateModel(
            name='Area',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', slth.db.models.CharField(max_length=60, unique=True)),
            ],
            options={
                'verbose_name': 'Área',
                'verbose_name_plural': 'Áreas',
                'ordering': ('nome',),
            },
            bases=(models.Model, slth.ModelMixin),
        ),
        migrations.CreateModel(
            name='Atendimento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.DateTimeField(blank=True)),
                ('assunto', slth.db.models.CharField(max_length=200)),
                ('duvida', slth.db.models.TextField(max_length=2000)),
                ('duracao', slth.db.models.IntegerField(null=True, verbose_name='Duração')),
                ('horario_excepcional', models.BooleanField(default=False, help_text='Marque essa opção caso deseje agendar em um horário fora da agenda do profissional.', verbose_name='Horário Exceptional')),
                ('justificativa_horario_excepcional', slth.db.models.TextField(blank=True, help_text='Obrigatório para agendamentos em horário excepcional.', null=True, verbose_name='Justificativa do Horário')),
                ('agendado_para', models.DateTimeField(blank=True, null=True, verbose_name='Data de Início')),
                ('finalizado_em', models.DateTimeField(null=True, verbose_name='Data de Término')),
                ('motivo_cancelamento', slth.db.models.TextField(null=True, verbose_name='Motivo do Cancelamento')),
                ('motivo_reagendamento', slth.db.models.TextField(null=True, verbose_name='Motivo do Cancelamento')),
                ('numero_webconf', slth.db.models.CharField(max_length=255, null=True, verbose_name='Número da WebConf')),
                ('senha_webconf', slth.db.models.CharField(max_length=255, null=True, verbose_name='Senha da WebConf')),
                ('limite_webconf', models.DateTimeField(null=True, verbose_name='Limite da WebConf')),
                ('area', slth.db.models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.area', verbose_name='Área')),
            ],
            options={
                'verbose_name': 'Teleconsulta',
                'verbose_name_plural': 'Teleconsultas',
                'icon': 'laptop-file',
            },
            bases=(models.Model, slth.ModelMixin),
        ),
        migrations.CreateModel(
            name='CIAP',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', slth.db.models.CharField(max_length=6, unique=True, verbose_name='Código')),
                ('doenca', slth.db.models.CharField(max_length=100, verbose_name='Doença')),
            ],
            options={
                'verbose_name': 'CIAP',
                'verbose_name_plural': 'CIAPs',
            },
            bases=(models.Model, slth.ModelMixin),
        ),
        migrations.CreateModel(
            name='CID',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', slth.db.models.CharField(max_length=6, unique=True, verbose_name='Código')),
                ('doenca', slth.db.models.CharField(max_length=250, verbose_name='Doença')),
            ],
            options={
                'verbose_name': 'CID',
                'verbose_name_plural': 'CIDs',
            },
            bases=(models.Model, slth.ModelMixin),
        ),
        migrations.CreateModel(
            name='Especialidade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cbo', slth.db.models.CharField(max_length=6, unique=True, verbose_name='Código')),
                ('nome', slth.db.models.CharField(max_length=150)),
                ('area', slth.db.models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.area', verbose_name='Área')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model, slth.ModelMixin),
        ),
        migrations.CreateModel(
            name='Estado',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', slth.db.models.CharField(max_length=2, unique=True)),
                ('sigla', slth.db.models.CharField(max_length=2, unique=True)),
                ('nome', slth.db.models.CharField(max_length=60, unique=True)),
            ],
            options={
                'verbose_name': 'Estado',
                'verbose_name_plural': 'Estados',
                'ordering': ['nome'],
            },
            bases=(models.Model, slth.ModelMixin),
        ),
        migrations.CreateModel(
            name='Municipio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', slth.db.models.CharField(max_length=6, unique=True)),
                ('nome', slth.db.models.CharField(max_length=60)),
                ('estado', slth.db.models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.estado')),
            ],
            options={
                'verbose_name': 'Município',
                'verbose_name_plural': 'Municípios',
            },
            bases=(models.Model, slth.ModelMixin),
        ),
        migrations.CreateModel(
            name='PessoaFisica',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('foto', slth.db.models.ImageField(blank=True, null=True, upload_to='pessoas_fisicas', verbose_name='Foto')),
                ('nome', slth.db.models.CharField(max_length=80, verbose_name='Nome')),
                ('nome_social', slth.db.models.CharField(blank=True, max_length=80, null=True, verbose_name='Nome Social')),
                ('cpf', slth.db.models.CharField(max_length=14, unique=True, verbose_name='CPF')),
                ('telefone', slth.db.models.CharField(blank=True, max_length=15, null=True, verbose_name='Telefone')),
                ('endereco', slth.db.models.CharField(blank=True, max_length=255, null=True, verbose_name='Endereço')),
                ('numero', slth.db.models.CharField(blank=True, max_length=255, null=True, verbose_name='Número')),
                ('cep', slth.db.models.CharField(blank=True, max_length=255, null=True, verbose_name='CEP')),
                ('bairro', slth.db.models.CharField(blank=True, max_length=255, null=True, verbose_name='Bairro')),
                ('complemento', slth.db.models.CharField(blank=True, max_length=150, null=True, verbose_name='Complemento')),
                ('data_nascimento', models.DateField(null=True, verbose_name='Data de Nascimento')),
                ('cns', slth.db.models.CharField(blank=True, max_length=15, null=True, verbose_name='CNS')),
                ('municipio', slth.db.models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='app.municipio', verbose_name='Município')),
            ],
            options={
                'verbose_name': 'Pessoa Física',
                'verbose_name_plural': 'Pessoas Físicas',
                'icon': 'users',
            },
            bases=(models.Model, slth.ModelMixin),
        ),
        migrations.CreateModel(
            name='Sexo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', slth.db.models.CharField(max_length=255, verbose_name='Nome')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model, slth.ModelMixin),
        ),
        migrations.CreateModel(
            name='TipoAtendimento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', slth.db.models.CharField(max_length=30, verbose_name='Nome')),
            ],
            options={
                'verbose_name': 'Tipo de Atendimento',
                'verbose_name_plural': 'Tipos de Atendimentos',
            },
            bases=(models.Model, slth.ModelMixin),
        ),
        migrations.CreateModel(
            name='Unidade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('foto', slth.db.models.ImageField(blank=True, null=True, upload_to='unidades', verbose_name='Foto')),
                ('cnes', slth.db.models.CharField(blank=True, max_length=12, null=True, verbose_name='CNES')),
                ('nome', slth.db.models.CharField(max_length=100)),
                ('logradouro', slth.db.models.CharField(max_length=120, null=True)),
                ('numero', slth.db.models.CharField(max_length=10, null=True)),
                ('bairro', slth.db.models.CharField(max_length=40, null=True)),
                ('cep', slth.db.models.CharField(max_length=10, null=True)),
                ('latitude', slth.db.models.CharField(blank=True, max_length=255, null=True, verbose_name='Latitude')),
                ('longitude', slth.db.models.CharField(blank=True, max_length=255, null=True, verbose_name='Longitude')),
                ('municipio', slth.db.models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.municipio')),
            ],
            options={
                'verbose_name': 'Unidade de Saúde',
                'verbose_name_plural': 'Unidades de Saúde',
                'icon': 'building',
            },
            bases=(models.Model, slth.ModelMixin),
        ),
        migrations.CreateModel(
            name='UnidadeOrganizacional',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', slth.db.models.CharField(max_length=255, verbose_name='Nome')),
                ('estados', slth.db.models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='app.estado', verbose_name='Estados')),
                ('gestores', slth.db.models.ManyToManyField(blank=True, to='app.pessoafisica', verbose_name='Gestores')),
                ('municipios', slth.db.models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='app.municipio', verbose_name='Municípios')),
                ('operadores', slth.db.models.ManyToManyField(blank=True, related_name='r2', to='app.pessoafisica', verbose_name='Operadores')),
                ('unidades', slth.db.models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='app.unidade', verbose_name='Unidades')),
            ],
            options={
                'verbose_name': 'Unidade Organizacional',
                'verbose_name_plural': 'Unidades Organizacionais',
                'icon': 'building',
            },
            bases=(models.Model, slth.ModelMixin),
        ),
        migrations.CreateModel(
            name='ProfissionalSaude',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('registro_profissional', slth.db.models.CharField(blank=True, max_length=30, verbose_name='Registro Profissional')),
                ('registro_especialista', slth.db.models.CharField(blank=True, max_length=30, null=True, verbose_name='Registro Especialista')),
                ('programa_provab', models.BooleanField(default=False)),
                ('programa_mais_medico', models.BooleanField(default=False)),
                ('residente', models.BooleanField(default=False)),
                ('perceptor', models.BooleanField(default=False)),
                ('ativo', models.BooleanField(default=False)),
                ('especialidade', slth.db.models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app.especialidade')),
                ('pessoa_fisica', slth.db.models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app.pessoafisica', verbose_name='Profissional')),
                ('uo', slth.db.models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app.unidadeorganizacional', verbose_name='Unidade Organizacional')),
            ],
            options={
                'verbose_name': 'Vínculo Profissional',
                'verbose_name_plural': 'Vínculos Profissionais',
                'icon': 'stethoscope',
                'search_fields': ('pessoafisica__cpf', 'pessoafisica__nome'),
            },
            bases=(models.Model, slth.ModelMixin),
        ),
        migrations.AddField(
            model_name='pessoafisica',
            name='sexo',
            field=slth.db.models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='app.sexo', verbose_name='Sexo'),
        ),
        migrations.CreateModel(
            name='HorarioProfissionalSaude',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_hora', models.DateTimeField(verbose_name='Data/Hora')),
                ('profissional_saude', slth.db.models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.profissionalsaude', verbose_name='Profissional de Saúde')),
            ],
            options={
                'verbose_name': 'Horário de Atendimento',
                'verbose_name_plural': 'Horários de Atendimento',
            },
            bases=(models.Model, slth.ModelMixin),
        ),
        migrations.CreateModel(
            name='EncaminhamentosCondutas',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subjetivo', slth.db.models.TextField(blank=True, help_text='Conjunto de campos que possibilita o registro da parte subjetiva da anamnese da consulta, ou seja, os dados dos sentimentos e percepções do cidadão em relação à sua saúde.', null=True, verbose_name='S - subjetivo')),
                ('objetivo', slth.db.models.TextField(blank=True, help_text='Conjunto de campos que possibilita o registro do exame físico, como os sinais e sintomas detectados, além do registro de resultados de exames realizados.', null=True, verbose_name='O - objetivo')),
                ('avaliacao', slth.db.models.TextField(blank=True, help_text='Conjunto de campos que possibilita o registro da conclusão feita pelo profissional de saúde a partir dos dados observados nos itens anteriores, como os motivos para aquele encontro, a anamnese do cidadão e dos exames físico e complementares.', null=True, verbose_name='A - avaliacao')),
                ('plano', slth.db.models.TextField(blank=True, help_text='Conjunto de funcionalidades que permite registrar o plano de cuidado ao cidadão em relação ao(s) problema(s) avaliado(s).', null=True, verbose_name='P - Plano')),
                ('data', models.DateTimeField(auto_now_add=True)),
                ('comentario', slth.db.models.TextField(blank=True)),
                ('encaminhamento', slth.db.models.TextField(blank=True, null=True)),
                ('conduta', slth.db.models.TextField(blank=True, null=True)),
                ('atendimento', slth.db.models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.atendimento')),
                ('responsavel', slth.db.models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.profissionalsaude')),
            ],
            options={
                'verbose_name': 'Encaminhamento e Condutas',
                'verbose_name_plural': 'Encaminhamentos e Condutas',
            },
            bases=(models.Model, slth.ModelMixin),
        ),
        migrations.CreateModel(
            name='CertificadoDigital',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('arquivo', slth.db.models.FileField(upload_to='certificados_digitais', verbose_name='Arquivo')),
                ('descricao', slth.db.models.CharField(max_length=255, verbose_name='Descrição')),
                ('validade', models.DateField(verbose_name='Validade')),
                ('user', slth.db.models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='slth.user', verbose_name='Usuário')),
            ],
            options={
                'verbose_name': 'Certificado Digital',
                'verbose_name_plural': 'Certificados Digitais',
            },
            bases=(models.Model, slth.ModelMixin),
        ),
        migrations.CreateModel(
            name='AvaliacaoAtendimento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('satisfacao', slth.db.models.IntegerField(choices=[(1, 'Muito Satisfeito'), (2, 'Satisfeito'), (3, 'Indiferente'), (4, 'Insatisfeito'), (5, 'Muito Insatisfeito')], verbose_name='Grau de Satisfação')),
                ('respondeu_duvida', slth.db.models.IntegerField(choices=[(1, 'Sim'), (2, 'Parcialmente'), (3, 'Não')], verbose_name='Respondeu a Dúvida/Problema')),
                ('evitou_encaminhamento', slth.db.models.IntegerField(choices=[(1, 'Sim, evitou'), (2, 'Não, pois ainda será necessário referenciá-lo (encaminhá-lo)'), (3, 'Não, pois não era minha intenção referenciá-lo antes da teleconsulta'), (4, 'Não, por outros motivos')], verbose_name='Evitou Encaminhamento')),
                ('mudou_conduta', slth.db.models.IntegerField(choices=[(1, 'Sim'), (2, 'Não, pois eu já seguia a conduta/abordagem sugerida'), (3, 'Não, pois não concordo com a reposta'), (4, 'Não, pois não há como seguir a conduta sugerida em nosso contexto'), (5, 'Não, por outros motivos')], verbose_name='Mudou Conduta')),
                ('recomendaria', models.BooleanField(choices=[(True, 'Sim'), (False, 'Não')], default=None, verbose_name='Recomendaria')),
                ('data', models.DateTimeField(auto_now_add=True, null=True)),
                ('atendimento', slth.db.models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app.atendimento')),
            ],
            options={
                'verbose_name': 'Avaliação de Solicitação',
                'verbose_name_plural': 'Avaliações de Solicitação',
            },
            bases=(models.Model, slth.ModelMixin),
        ),
        migrations.AddField(
            model_name='atendimento',
            name='ciap',
            field=slth.db.models.ManyToManyField(to='app.ciap', verbose_name='CIAP'),
        ),
        migrations.AddField(
            model_name='atendimento',
            name='cid',
            field=slth.db.models.ManyToManyField(to='app.cid', verbose_name='CID'),
        ),
        migrations.AddField(
            model_name='atendimento',
            name='especialista',
            field=slth.db.models.ForeignKey(blank=True, help_text='Profissional de saúde que será consultado pelo profissional responsável pelo atendimento', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='atendimentos_especialista', to='app.profissionalsaude'),
        ),
        migrations.AddField(
            model_name='atendimento',
            name='horario_especialista',
            field=slth.db.models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='r2', to='app.horarioprofissionalsaude', verbose_name='Horário'),
        ),
        migrations.AddField(
            model_name='atendimento',
            name='horario_profissional_saude',
            field=slth.db.models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.horarioprofissionalsaude', verbose_name='Horário'),
        ),
        migrations.AddField(
            model_name='atendimento',
            name='paciente',
            field=slth.db.models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='atendimentos_paciente', to='app.pessoafisica', verbose_name='Paciente'),
        ),
        migrations.AddField(
            model_name='atendimento',
            name='profissional',
            field=slth.db.models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='atendimentos_profissional', to='app.profissionalsaude', verbose_name='Responsável'),
        ),
        migrations.AddField(
            model_name='atendimento',
            name='tipo',
            field=slth.db.models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.tipoatendimento', verbose_name='Tipo de Atendimento'),
        ),
        migrations.AddField(
            model_name='atendimento',
            name='unidade',
            field=slth.db.models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app.unidade'),
        ),
        migrations.CreateModel(
            name='AnexoAtendimento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('arquivo', slth.db.models.FileField(max_length=200, upload_to='anexos_teleconsuta')),
                ('atendimento', slth.db.models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.atendimento')),
                ('autor', slth.db.models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app.pessoafisica')),
            ],
            options={
                'verbose_name': 'Anexo de Solicitação',
                'verbose_name_plural': 'Anexos de Solicitação',
            },
            bases=(models.Model, slth.ModelMixin),
        ),
    ]
